html {
  box-sizing: border-box;
}
*,
*::before,
*::after {
  box-sizing: inherit;
}

/* cherry-cream-soda-regular - latin */
@font-face {
  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
  font-family: "Cherry Cream Soda";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/cherry-cream-soda-v21-latin-regular.woff2") format("woff2"),
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
      url("../fonts/cherry-cream-soda-v21-latin-regular.ttf") format("truetype"); /* Chrome 4+, Firefox 3.5+, IE 9+, Safari 3.1+, iOS 4.2+, Android Browser 2.2+ */
}

body {
  font-family: "Cherry Cream Soda", sans-serif;
  margin: 0;
}

a {
  display: inline-block;
  text-decoration: none;
  color: #794f45;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 40px;
  line-height: 1;
  margin: 0 0 0 50px 0;
}

h2 {
  font-size: 30px;
  line-height: 1;
  margin: 0 0 0 20px 0;
}

/* ======= GRID - основные понятия === */

/* grid - умеет управлять элементами в двумерной плоскости одновременно */
/* flex - умеет управлять полько одной осью, горизонтальной или вертикальной */
/* 
  1. Grid Container: Это элемент, который содержит Grid Items. Чтобы создать Grid Container, нужно задать элементу свойство display: grid; или display: inline-grid;.
*/
/* 
  2. Grid Items: Это дочерние элементы Grid Container. Они автоматически становятся Grid Items, когда их родительский элемент становится Grid Container.
*/
/* 
  3. Grid Lines: Это линии, которые разделяют Grid Container на ячейки. Они могут быть горизонтальными и вертикальными.
*/
/* 
  4. Grid Tracks: Это строки и столбцы, образованные Grid Lines. Они могут быть заданы с помощью свойств grid-template-rows и grid-template-columns.
*/
/* 
  4. Grid Cells: Это ячейки, образованные пересечением Grid Lines. В них размещаются Grid Items.
*/
/* 
  5. Grid Areas: Это области, состоящие из одной или нескольких Grid Cells. Их можно задавать с помощью свойства grid-area.
*/
/* 
  6. Grid Gap: Это расстояние между Grid Tracks. Его можно задать с помощью свойства gap.
*/
/* 
  7. Grid Template: Это шаблон, который определяет структуру Grid Container. Он задается с помощью свойств grid-template-rows, grid-template-columns и grid-template-areas.
*/

/* Все строчные элементы становятся блочными в сетке */

/* margin не схлопывается */

/* padding и margin в сетке лучше не указывать, разные браузеры по разному их вычисляют  */

/* margin: auto -  */

.wrapper {
  /* что бы футор прибился книзу, нужно не 100% а - 100vh ! */
  min-height: 100vh;
  display: grid;
  grid-template: minmax(100px, auto) 1fr minmax(70px, auto) / 1fr;
  grid-template-areas:
    "header"
    "main"
    "footer";
  background-color: rgb(64, 48, 48);
}
.header {
  grid-area: header;
  background-color: #794f45;
  padding: 15px;
  display: grid;
  align-items: center;
  grid-template: 1fr / 1fr minmax(auto, 300px) minmax(auto, 1100px) 1fr;
}
.header__logo {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background-color: #fff;
  grid-column: 2 / 3;
}
.header__menu {
  grid-column: 3 / 4;
}
.header__list {
  display: grid;
  grid-auto-flow: column;
  justify-items: end;
}
.header__list li {
  margin: 0 0 0 30px;
}
.header__link {
  background-color: #fff;
  font-size: 18px;
}

/* burger */
.header__burger {
}

@media (max-width: 992px) {
  .header__list {
    display: none;
  }
  .header__menu {
    display: grid;
    justify-items: end;
  }
  .header__burger {
    width: 30px;
    display: grid;
    align-items: center;
    grid-template: repeat(3, 8px) / 1fr;
  }
  .header__burger::before {
    content: "";
    height: 2px;
    width: 30px;
    background-color: #fff;
  }
  .header__burger::after {
    content: "";
    height: 2px;
    width: 30px;
    background-color: #fff;
  }
  .header__burger span {
    height: 2px;
    width: 30px;
    background-color: #fff;
  }
}
/* ========= */
.main {
  padding: 30px 15px;
}

@media (min-width: 992px) {
  .main {
    grid-area: main;
    display: grid;
    grid-template: 1fr / 1fr minmax(auto, 300px) minmax(auto, 1100px) 1fr;
  }
}
.sidebar {
  background-color: #7a956b;
  padding: 30px 15px;
  margin: 0 0 30px 0;
}
.sidebar__menu {
}
.sidebar__list {
}
.sidebar__list li {
  margin: 0 0 15px 0;
}
.sidebar__link {
  color: #fff;
  font-size: 20px;
}
.content {
}
.content__title {
}
.content__gallery {
  margin: 0 0 30px 0;
}

@media (min-width: 992px) {
  .main {
    grid-area: main;
    display: grid;
    grid-template: 1fr / 1fr minmax(auto, 300px) minmax(auto, 1100px) 1fr;
  }
  .sidebar {
    grid-column: 2 / 3;
    margin: 0;
  }
  .content {
    grid-column: 3 / 4;
    padding: 0 0 0 30px;
  }
}

.gallery {
}
.gallery__title {
}
.gallery__items {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}
.gallery__item {
  position: relative;
  padding: 0 0 85% 0;
}
.gallery__item img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.gallery__item_big {
}

@media (min-width: 767px) {
  .gallery__item_big {
    grid-column: span 2;
    grid-row: span 2;
  }
}

.content__products {
}
.products {
}
.products__title {
}
.products__items {
  display: grid;
  column-gap: 30px;
  row-gap: 50px;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  /* grid-auto-rows: 1fr; */
}
.products__item {
  display: grid;
  grid-auto-flow: row;
  grid-template: auto 1fr minmax(40px, auto) / 1fr;
}
.products__image {
  position: relative;
  padding: 0 0 90% 0;
  margin: 0 0 20px 0;
}
.products__image img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.products__name {
  font-size: 20px;
  line-height: 30px;
  color: #fff;
  margin: 0 0 20px 0;
}
.products__button {
  color: #fff;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-decoration: none;
  line-height: 40px;
  justify-self: start;
  background-color: #77608d;
  padding: 0 20px;
}
.footer {
  display: grid;
  grid-area: footer;
  grid-template: 1fr / 1fr minmax(auto, 300px) minmax(auto, 1100px) 1fr;
  align-items: center;
  padding: 15px;
  background-color: #77608d;
}
.footer__copy {
}
.footer__text {
}

@media (min-width: 550px) {
  .footer__copy {
    grid-column: 2 / 3;
  }
  .footer__text {
    grid-column: 3 / 4;
    text-align: right;
  }
}
@media (max-width: 550px) {
  .footer {
    grid-template: 1fr 1fr / 1fr;
    text-align: center;
  }
  .footer__copy {
    order: 2;
  }
  .footer__text {
    order: 1;
  }
}
